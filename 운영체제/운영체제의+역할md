# 운영체제 역할
* 편리성
    * CUI(Character user interface)
    * GUI(Graphical User interface)
    * EUCI(End-User Comfortable Interface)
* 리소스(효율성) 관리
    * H/W resource
    * S/W resource
* Process and Thread management
    * 프로그램 실행의 주체
* 시스템 보호 등


# 컴퓨터 시스템 구성



# 운영체제 구분
* 동시 사용자 수 
    * single-user system
    * Multi-user system
* 동시 실행 프로세스 수
    * Single-tasking system
    * 
* 작업 수행 방식 (사용자가 느끼는 사용 환경)
  

## 동시 사용자 수 
* 단일 사용자
    * 한명의 사용자만 시스템 사용가능
        * 한 명의 사용자가 모든 시스템 자원 독점
        * 자원관리 및 시스템 보호 방식이 간단함
    * 개인용 장비 등에 사용
        * Windows, android, ms-dos 등
* 다중 사용자
    * 동시에 여러 사용자들이 시스템 사용
        * 각종 시스템 자원들에 대한 소유 권한 관리 필요
        * 기본적으로 Multi-tasking 기능 필요
        * os의 기능 및 구조가 복잡
    * 서버, 클러스터 장비 등에 사용
        * Unix, Linux, Windows server 등

## 동시 실행 프로세스 수
* 단일 작업
    * 시스템 내에 하나의 작업만 존재
        * 하나의 프로그램 실행을 마친 뒤에 다른 프로그램의 실행
    * 운영체제의 구조가 간단
* 다중 작업
    * 동시에 여러 작업의 수행 가능
        * 작업들 사이의 동시 수행, 동기화 등을 관리해야 함
    * 운영체제의 기능 및 구조가 복잡
    

## 작업 수행 방식

### 순차 처리
* 운영체제 개념 존재하지 않음
    * 사용자가 기계어로 적접 프로그램 작성
    * 컴퓨터에 필요한 모든 작업 프로그램에 포함
        * 프로세서에는 명령어 저장 방법, 계산 대상, 결과 저장 위치와 방법, 출력 시점, 위치 증
* 실행하는 작업 별 순차 처리
    * 각각의 작업에 대한 준비 시간이 소요
    * 플랫폼이 다를 수 있으니 각 플랫폼에 맞춰 설정하는데 시간이 걸렸단다

### Batch System
* 모든 시스템을 중앙에서 관리 및 운영
* 사용자의 요청 작업을 일정 시간 모아두었다가 한번에 처리
* 시스템 지향적

장점
* 많은 사용자가 시스템 자원 공유
* 처리 효율 향상

단점 
* 생산성 저하
    * 같은 유형의 작업들이 모이기를 기다려야 함
* 긴 응답시간
    * 약 6시간


### 시분할(time sharing) 시스템
* 여러 사용자가 자원을 동시에 사용
    * os가 파일 시스템 및 가장 메모리 관리
* 사용자 지향적
    * 대화형 시스템
    * 단말기 사용

장점
* 응답시간 단축
* 생산성 향상
    * 프로세서 유휴시간 감소

단점
* 통신 비용 증가
    * 통신선 비용, 보안 문제 등
* 개인 사용자 체감 속도 저하
    * 동시 사용자수 증가 -> 시스템 부하 -> 느려짐